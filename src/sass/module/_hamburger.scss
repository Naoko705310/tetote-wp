@use "global" as *;

.hamburger {
  width: rem(32);
  display: block;
  position: relative;
  z-index: 1001; // nav より上に表示
  cursor: pointer;
  @include mq(md) {
    width: rem(52);
  }
}

// 線（3本） → hamburger-text 以外
.hamburger span:not(.hamburger-text) {
  display: block;
  width: 100%;
  height: 2px;
  background-color: $white;
  transition: all 0.4s ease;
}
// // 線（3本）
// .hamburger span {
//   display: block;
//   width: 100%;
//   height: 2px;
//   background-color: $white;
//   transition: all 0.4s ease;
// }

// 1本目 → 2本目の間隔
.hamburger span:nth-child(2) {
  margin-top: rem(9);
  @include mq(md) {
    margin-top: rem(15);
  }
}

// 2本目 → 3本目の間隔
.hamburger span:nth-child(3) {
  margin-top: rem(9);
  @include mq(md) {
    margin-top: rem(20);
    // margin-top: rem(15);
  }
}

// MENUテキスト
.hamburger-text {
  display: block;
  font-size: rem(10);
  color: $white;
  text-align: center;
  margin-top: rem(6); // 3本目との間隔
  @include mq(md) {
    font-size: rem(12);
    margin-top: rem(10); // 3本目との間隔
  }
}


// ハンバーガーメニューがアクティブなとき（header-navが開いている時）
.hamburger.is-active span:nth-child(1) {
  transform: translateY(rem(12)) rotate(45deg); 
  @include mq(md) {
    transform: translateY(rem(12)) rotate(45deg);
  }
}

.hamburger.is-active span:nth-child(2) {
  opacity: 0; // 真ん中の線を消す
}

.hamburger.is-active span:nth-child(3) {
  transform: translateY(rem(-12)) rotate(-45deg);
  @include mq(md) {
    transform: translateY(rem(-26)) rotate(-45deg);
  }
}

// ハンバーガーメニューがアクティブなとき
.hamburger.is-active span {
  background-color: $black;
}

.hamburger.is-active .hamburger-text {
  color: $black;
}

// is-active のときは非表示
.hamburger.is-active .hamburger-text {
  display: none;
}
